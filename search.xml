<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Vue学习记录一]]></title>
    <url>%2F2018%2F09%2F04%2FVue%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95%E4%B8%80%2F</url>
    <content type="text"></content>
  </entry>
  <entry>
    <title><![CDATA[js的Array对象常用方法]]></title>
    <url>%2F2018%2F08%2F20%2Fjs%E7%9A%84Array%E5%AF%B9%E8%B1%A1%E5%B8%B8%E7%94%A8%E6%96%B9%E6%B3%95%2F</url>
    <content type="text"><![CDATA[Array对象常用方法中：1、 concat() 连接两个或多个数组不改变原数组返回被连接数组的一个副本2、join()把数组中所有元素放入一个字符串不改变原数组返回字符串3、 slice()从已有的数组中返回选定的元素不改变原数组返回一个新数组4、 toString()把数组转为字符串不改变原数组返回数组的字符串形式改变原数组：5、 pop()删除数组最后一个元素，如果数组为空，则不改变数组，返回undefined改变原数组返回被删除的元素 6、 push() 向数组末尾添加一个或多个元素改变原数组返回新数组的长度7、 reverse()颠倒数组中元素的顺序改变原数组返回该数组8、 shift()把数组的第一个元素删除，若空数组，不进行任何操作，返回undefined改变原数组返回第一个元素的值9、 sort()对数组元素进行排序(ascii)改变原数组返回该数组10、 splice()从数组中添加/删除项目改变原数组返回被删除的元素11、 unshift()向数组的开头添加一个或多个元素改变原数组返回新数组的长度]]></content>
      <categories>
        <category>javaScript</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[布局神器：display:flex;]]></title>
    <url>%2F2018%2F08%2F20%2F%E5%B8%83%E5%B1%80%E7%A5%9E%E5%99%A8%EF%BC%9Adisplay-flex%2F</url>
    <content type="text"><![CDATA[容器设置为flex的容器称为Flex容器，其所有子元素自动成为容器成员，称为项目。 容器属性其有6个属性： flex-direction flex-wrap flex-flow justify-content align-item align-content flex-directionflex-direction属性：决定主轴的方向（即项目的排列方向）.box { flex-direction: row | row-reverse | column | column-reverse;} row（默认）：主轴水平方向，起点在左端； row-reverse：主轴水平方向，起点在右端； column：主轴垂直方向，起点在上边沿； column-reserve：主轴垂直方向，起点在下边沿 flex-wrapflex-wrap属性：定义换行情况默认情况下，项目都排列在一条轴线上，但有可能一条轴线排不下。.box{ flex-wrap: nowrap | wrap | wrap-reverse;}nowrap（默认）：不换行；wrap：换行，第一行在上方；wrap-reverse：换行，第一行在下方。 flex-flowflex-flow属性：flex-direction和flex-wrap的简写，默认row nowrap.box{ flex-flow: || ;} justify-contentjustify-content属性：定义项目在主轴上的对齐方式。对齐方式与轴的方向有关，本文中假设主轴从左到右。 .box { justify-content: start | end | flex-start | flex-end | center | left | right | space-between | space-around | space-evenly | stretch | safe | unsafe | baseline | first baseline | last baseline;}flex-start（默认值）：左对齐；flex-end：右对齐；center：居中；space-between：两端对齐，项目之间间隔相等；space-around：每个项目两侧的间隔相等，即项目之间的间隔比项目与边框的间隔大一倍。 align-itemsalign-items属性：定义在交叉轴上的对齐方式对齐方式与交叉轴的方向有关，假设交叉轴从下到上。 .box{ align-items: flex-start | flex-end | center | baseline | stretch;}flex-start：起点对齐；flex-end：终点对齐；center：中点对齐；baseline：项目的第一行文字的基线对齐；stretch（默认值）：如果项目未设置高度或设为auto，将占满整个容器的高度. align-contentalign-content属性：定义多根轴线的对齐方式如果项目只有一根轴线，该属性不起作用。所以，容器必须设置flex-wrap：···； .box{ align-content: flex-start | flex-end | center | space-between | space-around | stretch;}]]></content>
      <categories>
        <category>css</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[jQuery中的DOM操作（jQuery学习第二篇）]]></title>
    <url>%2F2018%2F08%2F02%2FjQuery%E4%B8%AD%E7%9A%84DOM%E6%93%8D%E4%BD%9C%EF%BC%88jQuery%E5%AD%A6%E4%B9%A0%E7%AC%AC%E4%BA%8C%E7%AF%87%EF%BC%89%2F</url>
    <content type="text"><![CDATA[HTML-DOM 查找节点参考上一篇 查找属性节点attr()方法，参数为要查询的属性的名字； 创建节点&gt;$(html)方法：var $li_1=$(“li title=”title”&gt;文本 li&gt;”)//创建一个li元素，并为其添加title属性，内容为文本 插入节点append():向每个匹配元素内部追加内容；prepend():向每个匹配的元素内部前置内容；after():在每个匹配的元素之后插入内容；before():在每个匹配的元素之前插入内容 删除节点remove()方法，删除后该节点的所有后代节点将同时被删除，该方法删除后，还是可以继续使用的。同时可以传递参数有选择性地删除元素detach()方法：与remove()方法不同的是被删除的元素所有绑定的事件，附加的数据等都会保留下来。empty()方法：不是删除节点，而是清空节点。 复制节点clone()方法:当传递参数true时，复制元素的同时复制元素中所绑定的事件，因此该元素的副本也同样具有复制功能。 替换节点replaceWith()方法：$(“替换目标”).replaceWith(“替换内容”)]]></content>
      <categories>
        <category>jQuery</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[如何把本地项目上传到github（最简单的方法）]]></title>
    <url>%2F2018%2F08%2F01%2F%E5%A6%82%E4%BD%95%E6%8A%8A%E6%9C%AC%E5%9C%B0%E9%A1%B9%E7%9B%AE%E4%B8%8A%E4%BC%A0%E5%88%B0github%EF%BC%88%E6%9C%80%E7%AE%80%E5%8D%95%E7%9A%84%E6%96%B9%E6%B3%95%EF%BC%89%2F</url>
    <content type="text"><![CDATA[1、在github上 new repository2、点击Clone or dowload会出现一个地址，copy这个地址备用。3、在本地项目上点击GIT BASH HERE4、输入 git clone + （第二条备用的地址）5、本地会多出一个文件夹（文件名和github项目相同，把你要上传的项目文件复制到该文件夹下。6、cd 文件夹名7、依次输入以下命令 git add . （注：别忘记后面的.，此操作是把Test文件夹下面的文件都添加进来） git commit -m “提交信息” （注：“提交信息”里面换成你需要，如“first commit”） git push -u origin master （注：此操作目的是把本地仓库push到github上面，此步骤需要你输入帐号和密码） 参考链接：https://www.cnblogs.com/cxk1995/p/5800196.html]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>github</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[jQuery选择器(jQuery学习第一篇)]]></title>
    <url>%2F2018%2F08%2F01%2FjQuery%E9%80%89%E6%8B%A9%E5%99%A8%2F</url>
    <content type="text"><![CDATA[基本选择器$(“#one”)、$(“div”)、$(“.class”)、$(“*”)、$(“span,#id”) 层次选择器&amp;(“parent&gt;child”):选取parent元素下的child元素&amp;(“prev+next”):选取紧接在prev元素后的next元素(同辈元素)&amp;(“prev~sibings”):选取prev元素后的所有同辈元素 过滤选择器:first 第一个:last 最后一个:not(selector) 不是某个:even :索引是偶数:odd :索引是奇数:eq(index) ：索引等于:gt(index) 索引大于:lt(index) 索引小于:header 标题元素:animated 正在执行动画的元素:focus 当前获取焦点的元素 可见过滤选择器:hidden 选取所有不可见的元素:visible 选取所有可见的元素 属性过滤选择器$(“div[id]”) 选取拥有属性id的div元素$(“div[title=test]”) 选取属性title为’test’的div元素[attribute!=value] 选取属性的值不等于value的值[attribute^=value] 属性值以value开始的元素[attribute$=value] 属性值以value结束的元素[attribute*=value] 属性值含有value的元素[attribute|=value] 属性值以value为前缀的元素[attribute~=value] 属性用空格分隔的值中包含value的元素[attribute1][attribute2][attributen] 复合选择 表单对象属性过滤选择器$(“#form1 :enabled”) id为form1的表单中所有可见元素$(“#form1 :disabled”) id为form1的表单中所有不可见元素$(“input:checked”) 选取所有被选中的input元素$(“select option:selected”) 选取所有被选中的选项元素 表单对象属性过滤选择器:input 选取所有input textarea select button元素:text 选取所有的单行文本框:password 密码框:radio 单选框:checkbox 复选框:submit 提交按钮:image 图像按钮:reset 重置按钮:button 所有的按钮:file 所有的上传域:hidden 所有不可见元素]]></content>
      <categories>
        <category>jQuery</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[css实现导航栏]]></title>
    <url>%2F2018%2F07%2F31%2Fcss%E5%AE%9E%E7%8E%B0%E5%AF%BC%E8%88%AA%E6%A0%8F%2F</url>
    <content type="text"><![CDATA[用html+css实现下拉导航栏代码如下 &lt;div class=&quot;box&quot;&gt; &lt;ul class=&quot;menu&quot;&gt; &lt;li class=&quot;level1&quot;&gt; &lt;a href=&quot;#none&quot; &gt;衬衫&lt;/a&gt; &lt;ul class=&quot;level2&quot;&gt; &lt;li&gt;&lt;a href=&quot;#none&quot;&gt;短袖衬衫&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#none&quot;&gt;长袖衬衫&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#none&quot;&gt;短袖T恤&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#none&quot;&gt;长袖T恤&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li class=&quot;level1&quot;&gt; &lt;a href=&quot;#none&quot;&gt;卫衣&lt;/a&gt; &lt;ul class=&quot;level2&quot;&gt; &lt;li&gt;&lt;a href=&quot;#none&quot;&gt;开襟卫衣&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#none&quot;&gt;套头卫衣&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#none&quot;&gt;运动卫衣&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#none&quot;&gt;童装卫衣&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li class=&quot;level1&quot;&gt; &lt;a href=&quot;#none&quot;&gt;裤子&lt;/a&gt; &lt;ul class=&quot;level2&quot;&gt; &lt;li&gt;&lt;a href=&quot;#none&quot;&gt;短裤&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#none&quot;&gt;休闲裤&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#none&quot;&gt;牛仔裤&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#none&quot;&gt;免烫卡其裤&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; css 实现代码如下：.menu li a{ text-decoration: none; //去下划线 color: #000;}.menu li{ list-style: none;//去ul，li前的圆点； }//设置主菜单样式.level1{ width: 150px; min-height: 40px;//最小高度，以实现扩展 line-height: 40px;//高度居中 border: 1px solid #000000; background: #d8d8d8; }//实现ul,li左对齐.level1 .level2{ padding: 0px; margin: 0px;}//设置下拉菜单样式.level2 li{ display: none;//不可见 width: 150px; height: 30px; padding: 5px; background: #fff; }//鼠标滑动到主菜单颜色改变.level1:hover{ background:#999 ;}//鼠标滑动到主菜单，下拉菜单可见.level1:hover .level2 li{ display: block; }//鼠标滑动到下拉菜单，颜色改变.level2 a:hover{ background: #999;}实现效果如图：]]></content>
      <categories>
        <category>css</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[the first]]></title>
    <url>%2F2018%2F07%2F27%2Fthe-first%2F</url>
    <content type="text"><![CDATA[周末两天再重新看一遍html+css+js的基础知识，做好笔记，重要代码写在博客里，不要让我的博客浪费！写博客步骤：1、打开git bash2、输出hexo new ‘文章名’3、hexo clean4、hexo generate5、hexo deploy]]></content>
      <categories>
        <category>随笔</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2018%2F06%2F24%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
